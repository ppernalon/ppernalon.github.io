{"version":3,"sources":["Pages/SplashPage.jsx","App.js","serviceWorker.js","index.js","Assets/Logos/UA_Logo.png"],"names":["Accueil","props","className","id","src","UA_logo","width","React","Component","lazy","VieAssociative","ManifestationAssociative","window","onscroll","innerWidth","scrollY","document","getElementById","style","opacity","backgroundColor","ApparitionMenu","App","Pages","ListNavLi","to","alt","ListSwitch","Page","push","exact","path","component","fallback","splice","onClick","MenuNavigation","DeroulementMenuMobile","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d0d89aee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SplashPage.css'\r\nimport UA_logo from \"../Assets/Logos/UA_Logo.png\";\r\n\r\nexport default class Accueil extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={\"Pages\"} id=\"SplashPage-Container\">\r\n                <img src={UA_logo} width={300}/>\r\n                <h1 id={\"SplashPage-h1\"}> Chargement... </h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {lazy, Suspense} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport UA_logo from \"./Assets/Logos/UA_Logo.png\";\nimport SplashPage from \"./Pages/SplashPage\";\n\nconst Accueil = lazy(() => import(\"./Pages/Accueil\"));\nconst VieAssociative = lazy(() => import(\"./Pages/VieAssociative\"));\nconst ManifestationAssociative = lazy(() => import(\"./Pages/ManifestationAssociative\"));\n\nfunction App() {\n\n  const Pages = {\n    Accueil: [\"\", <Accueil/>, \"Accueil\"],\n    VieAssociative: [\"VieAssociative\", <VieAssociative/>, \"Vie associative\"],\n    ManifestationAssociative: [\"ManifestationAssociative\", <ManifestationAssociative/>, \"Manifestation associative\"],\n  };\n  const ListNavLi = [\n      <li className={\"liMenuNavigation\"} id={\"liMenuNavigationIDlogo\"} style={{opacity: 0}}>\n        <Link to=\"/\"><img src={UA_logo} id={\"uaLogoMenu\"} alt={\"Logo Union des Associations de l'École centrale de Marseille\"}/></Link>\n      </li>];\n  const ListSwitch = [];\n  for (let Page in Pages)\n  {\n      ListNavLi.push(\n          <li className={\"liMenuNavigation\"} id={\"liMenuNavigationID\" + Pages[Page][0]}>\n            <Link to={\"/\" + Pages[Page][0]}>{Pages[Page][2]}</Link>\n          </li>\n      );\n\n    ListSwitch.push(\n        <Route exact path={\"/\" + Pages[Page][0]} component={() => Pages[Page][1]}/>\n    )\n  }\n\n  if (window.innerWidth > 768) {\n      return (\n          <div className=\"AppSiteUA\">\n              <Suspense fallback={<SplashPage/>}>\n                  <Router>\n                      <div>\n                          <nav id={\"MenuNavigation\"}>\n                              <ul id={\"ulMenuNavigation\"}>\n                                  {ListNavLi}\n                              </ul>\n                          </nav>\n\n                          <Switch>\n                              {ListSwitch}\n                          </Switch>\n                      </div>\n                  </Router>\n              </Suspense>\n          </div>\n      );\n  }\n  else {\n      ListNavLi.splice(0,1)\n      return (\n          <div className=\"AppSiteUA\">\n              <Suspense fallback={<SplashPage/>}>\n                  <Router>\n                      <div>\n                          <div id={\"MobileHorizontalBarMenu\"}>\n                              <Link to=\"/\"><img src={UA_logo} id={\"uaLogoMenu\"} alt={\"Logo Union des Associations de l'École centrale de Marseille\"}/></Link>\n                              <div id={\"BurgerButtonMenu\"} onClick={() => DeroulementMenuMobile()}>\n                                  <div className={\"BarBurgerButtonMenu\"}/>\n                                  <div className={\"BarBurgerButtonMenu\"}/>\n                                  <div className={\"BarBurgerButtonMenu\"}/>\n                              </div>\n                          </div>\n\n                          <nav style={{opacity: 0}} id={\"MenuNavigation\"}>\n                              <ul id={\"ulMenuNavigation\"}>\n                                  {ListNavLi}\n                              </ul>\n                          </nav>\n\n                          <Switch>\n                              {ListSwitch}\n                          </Switch>\n                      </div>\n                  </Router>\n              </Suspense>\n          </div>\n      );\n  }\n}\n\nwindow.onscroll = function() {ApparitionMenu()}\n\nfunction ApparitionMenu(){\n    if (window.innerWidth>767) {\n        if (window.scrollY>30){\n            let LogoUAMenuBar = document.getElementById(\"liMenuNavigationIDlogo\")\n            LogoUAMenuBar.style.opacity = 1\n            let ulMenuNavigation = document.getElementById(\"ulMenuNavigation\")\n            ulMenuNavigation.style.backgroundColor = \"rgba(19, 67, 91, 0.7)\"\n        }\n        else {\n            let LogoUAMenuBar = document.getElementById(\"liMenuNavigationIDlogo\")\n            LogoUAMenuBar.style.opacity = 0\n            let ulMenuNavigation = document.getElementById(\"ulMenuNavigation\")\n            ulMenuNavigation.style.backgroundColor = \"rgba(19, 67, 91, 0)\"\n        }\n    }\n    else {\n        if (window.scrollY>30){\n            let MobileHorizontalBarMenu = document.getElementById(\"MobileHorizontalBarMenu\")\n            MobileHorizontalBarMenu.style.backgroundColor = \"rgba(19, 67, 91, 0.7)\"\n            let uaLogoMenu = document.getElementById(\"uaLogoMenu\")\n            uaLogoMenu.style.opacity = 1\n        }\n        else{\n            let MobileHorizontalBarMenu = document.getElementById(\"MobileHorizontalBarMenu\")\n            MobileHorizontalBarMenu.style.backgroundColor = \"rgba(19, 67, 91, 0)\"\n            let uaLogoMenu = document.getElementById(\"uaLogoMenu\")\n            uaLogoMenu.style.opacity = 0\n        }\n    }\n}\n\nfunction DeroulementMenuMobile(){\n    let MenuNavigation = document.getElementById(\"MenuNavigation\")\n    if (MenuNavigation.style.opacity === \"0\"){\n        MenuNavigation.style.opacity = \"1\"\n        let MobileHorizontalBarMenu = document.getElementById(\"MobileHorizontalBarMenu\")\n        MobileHorizontalBarMenu.style.backgroundColor = \"rgba(19, 67, 91, 0.7)\"\n        let uaLogoMenu = document.getElementById(\"uaLogoMenu\")\n        uaLogoMenu.style.opacity = 1\n    }\n    else{\n        MenuNavigation.style.opacity = \"0\"\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/UA_Logo.2d93c97c.png\";"],"sourceRoot":""}